-- SERVICES
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local camera = Workspace.CurrentCamera

-- DATA
local petTable = {
    ["Common Egg"] = { "Dog", "Bunny", "Golden Lab" },
    ["Uncommon Egg"] = { "Black Bunny", "Chicken", "Cat", "Deer" },
    ["Rare Egg"] = { "Orange Tabby", "Spotted Deer" },
    ["Epic Egg"] = { "Dalmatian", "Fox", "Snow Deer" },
    ["Legendary Egg"] = { "Robot Dog", "Ice Fox", "Winter Bunny" },
    ["Mythic Egg"] = { "Phoenix", "Unicorn", "Griffin" },
    ["Ancient Egg"] = { "Dragon", "Saber Tooth", "Woolly Mammoth" },
    ["Forest Egg"] = { "Tree Frog", "Mushroom Cat", "Leaf Deer" },
    ["Ocean Egg"] = { "Shark", "Jellyfish", "Sea Turtle" },
    ["Sky Egg"] = { "Eagle", "Cloud Bunny", "Storm Fox" },
    ["Zen Egg"] = { "Zen Cat", "Zen Deer", "Zen Dragon" }
}

local mutationTypes = {
    "Shiny", "Inverted", "Frozen", "Windy", "Golden", "Mega", "Tiny", "Tranquil",
    "IronSkin", "Radiant", "Rainbow", "Shocked", "Ascended"
}

-- CONSTANTS
local MAX_DISTANCE = 100 -- studs

-- UI SETUP (Same as before)

local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "EggRandomizerUI"
ScreenGui.Parent = player:WaitForChild("PlayerGui")

local Frame = Instance.new("Frame")
Frame.Size = UDim2.new(0, 260, 0, 190)
Frame.Position = UDim2.new(0.05, 0, 0.1, 0)
Frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Frame.BorderSizePixel = 0
Frame.Active = true
Frame.Draggable = true
Frame.Parent = ScreenGui

local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1, 0, 0, 30)
Title.Position = UDim2.new(0, 0, 0, 0)
Title.BackgroundTransparency = 1
Title.Text = "Egg Randomizer"
Title.Font = Enum.Font.GothamBold
Title.TextSize = 20
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.Parent = Frame

local function createButton(text, yPos)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(1, -20, 0, 35)
    btn.Position = UDim2.new(0, 10, 0, yPos)
    btn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    btn.TextColor3 = Color3.new(1, 1, 1)
    btn.Font = Enum.Font.Gotham
    btn.TextSize = 18
    btn.Text = text
    btn.Parent = Frame
    return btn
end

local btnESP = createButton("Egg ESP: OFF", 40)
local btnMutation = createButton("Mutation Finder: OFF", 80)
local btnManualRandomize = createButton("Manual Randomize Eggs", 120)
local btnAutoRandomize = createButton("Auto Randomize: OFF", 160)

-- STATE
local espEnabled = false
local mutationEnabled = false
local autoRandomize = false
local eggPreviews = {} -- eggModel -> petName
local autoRandomizeTimer = 0
local AUTO_RANDOMIZE_INTERVAL = 10

local eggESPCache = {}
local mutationTagCache = {}

-- UTILITIES

local function isInRange(part)
    if not part or not part.Position then return false end
    local dist = (camera.CFrame.Position - part.Position).Magnitude
    return dist <= MAX_DISTANCE
end

local function createESP(eggModel, petName)
    local part = eggModel:FindFirstChild("Main") or eggModel.PrimaryPart or eggModel:FindFirstChildWhichIsA("BasePart")
    if not part then return nil end

    local esp = Instance.new("BillboardGui")
    esp.Name = "EggESP"
    esp.Adornee = part
    esp.Size = UDim2.new(0, 180, 0, 40)
    esp.StudsOffset = Vector3.new(0, 3, 0)
    esp.AlwaysOnTop = true

    local bg = Instance.new("Frame")
    bg.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    bg.BackgroundTransparency = 0.3
    bg.Size = UDim2.new(1, 0, 1, 0)
    bg.BorderSizePixel = 0
    bg.AnchorPoint = Vector2.new(0, 0)
    bg.Position = UDim2.new(0, 0, 0, 0)
    bg.Parent = esp

    local label = Instance.new("TextLabel")
    label.Name = "TextLabel"
    label.BackgroundTransparency = 1
    label.Size = UDim2.new(1, -10, 1, -10)
    label.Position = UDim2.new(0, 5, 0, 5)
    label.Font = Enum.Font.GothamBold
    label.TextSize = 24
    label.TextColor3 = Color3.fromRGB(255, 215, 0) -- golden
    label.TextStrokeColor3 = Color3.new(0, 0, 0) -- black outline
    label.TextStrokeTransparency = 0
    label.Text = petName
    label.TextScaled = false
    label.RichText = false
    label.TextWrapped = true
    label.Parent = esp

    local shadow = Instance.new("TextLabel")
    shadow.Name = "Shadow"
    shadow.BackgroundTransparency = 1
    shadow.Size = label.Size
    shadow.Position = UDim2.new(0, 6, 0, 6)
    shadow.Font = label.Font
    shadow.TextSize = label.TextSize
    shadow.TextColor3 = Color3.new(0, 0, 0)
    shadow.TextTransparency = 0.5
    shadow.Text = petName
    shadow.TextStrokeTransparency = 1
    shadow.TextScaled = false
    shadow.TextWrapped = true
    shadow.ZIndex = label.ZIndex - 1
    shadow.Parent = esp

    esp.Parent = part

    return esp
end

local function createMutationTag(petModel, mutationName)
    local part = petModel:FindFirstChildWhichIsA("BasePart")
    if not part then return nil end

    local tag = Instance.new("BillboardGui")
    tag.Name = "MutationTag"
    tag.Adornee = part
    tag.Size = UDim2.new(0, 160, 0, 30)
    tag.StudsOffset = Vector3.new(0, 3, 0)
    tag.AlwaysOnTop = true

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, 0, 1, 0)
    label.BackgroundTransparency = 1
    label.TextColor3 = Color3.fromRGB(0, 255, 255)
    label.TextStrokeTransparency = 0.5
    label.TextScaled = true
    label.Font = Enum.Font.GothamBold
    label.Text = mutationName .. " Mutation"
    label.Parent = tag

    tag.Parent = petModel
    return tag
end

-- MAIN FUNCTIONS

local function clearESP()
    for eggModel, esp in pairs(eggESPCache) do
        if esp and esp.Parent then
            esp:Destroy()
        end
    end
    eggESPCache = {}
end

local function clearMutations()
    for petModel, tag in pairs(mutationTagCache) do
        if tag and tag.Parent then
            tag:Destroy()
        end
    end
    mutationTagCache = {}
end

local function randomizeEggPreviews()
    eggPreviews = {}
    clearESP()
    for eggName, pets in pairs(petTable) do
        for _, eggModel in pairs(Workspace:GetChildren()) do
            if eggModel:IsA("Model") and eggModel.Name == eggName then
                local petName = pets[math.random(#pets)]
                eggPreviews[eggModel] = petName
                if espEnabled then
                    local part = eggModel:FindFirstChild("Main") or eggModel.PrimaryPart or eggModel:FindFirstChildWhichIsA("BasePart")
                    if part and isInRange(part) then
                        eggESPCache[eggModel] = createESP(eggModel, petName)
                    end
                end
            end
        end
    end
end

local function updateMutationTags()
    clearMutations()
    local mutationArea = Workspace:FindFirstChild("MutationArea")
    if not mutationArea then return end

    for _, pet in pairs(mutationArea:GetChildren()) do
        if pet:IsA("Model") then
            local part = pet:FindFirstChildWhichIsA("BasePart")
            if part and isInRange(part) then
                local mutation = mutationTypes[math.random(#mutationTypes)]
                mutationTagCache[pet] = createMutationTag(pet, mutation)
            end
        end
    end
end

-- BUTTON HANDLERS

btnESP.MouseButton1Click:Connect(function()
    espEnabled = not espEnabled
    if espEnabled then
        btnESP.Text = "Egg ESP: ON"
        randomizeEggPreviews()
    else
        btnESP.Text = "Egg ESP: OFF"
        clearESP()
    end
end)

btnMutation.MouseButton1Click:Connect(function()
    mutationEnabled = not mutationEnabled
    if mutationEnabled then
        btnMutation.Text = "Mutation Finder: ON"
        updateMutationTags()
    else
        btnMutation.Text = "Mutation Finder: OFF"
        clearMutations()
    end
end)

btnManualRandomize.MouseButton1Click:Connect(function()
    randomizeEggPreviews()
end)

btnAutoRandomize.MouseButton1Click:Connect(function()
    autoRandomize = not autoRandomize
    if autoRandomize then
        btnAutoRandomize.Text = "Auto Randomize: ON"
        autoRandomizeTimer = 0
    else
        btnAutoRandomize.Text = "Auto Randomize: OFF"
    end
end)

-- MAIN LOOP

RunService.RenderStepped:Connect(function(dt)
    -- Mutation tags update every 5 seconds
    if mutationEnabled then
        autoRandomizeTimer = autoRandomizeTimer + dt
        if autoRandomizeTimer >= 5 then
            updateMutationTags()
            autoRandomizeTimer = 0
        end
    else
        clearMutations()
    end

    -- Auto randomize eggs every AUTO_RANDOMIZE_INTERVAL seconds
    if autoRandomize then
        autoRandomizeTimer = autoRandomizeTimer + dt
        if autoRandomizeTimer >= AUTO_RANDOMIZE_INTERVAL then
            randomizeEggPreviews()
            autoRandomizeTimer = 0
        end
    end
end)
