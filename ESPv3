-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- Player and camera
local player = Players.LocalPlayer
local camera = Workspace.CurrentCamera

-- Eggs and pets dictionary
local petTable = {
    ["Common Egg"] = {"Cat", "Dog", "Bunny"},
    ["Rare Egg"] = {"Tiger", "Panda", "Wolf"},
    ["Legendary Egg"] = {"Dragon", "Phoenix", "Unicorn"},
}

-- Create UI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "PetHatchDisplay"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

local petLabel = Instance.new("TextLabel")
petLabel.Size = UDim2.new(0, 300, 0, 50)
petLabel.Position = UDim2.new(0.5, -150, 0.85, 0)
petLabel.BackgroundTransparency = 0.3
petLabel.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
petLabel.BorderSizePixel = 0
petLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
petLabel.Font = Enum.Font.GothamBold
petLabel.TextScaled = true
petLabel.Text = ""
petLabel.Visible = false
petLabel.Parent = screenGui

-- Function to simulate hatching
local function hatchEgg(eggName)
	local petList = petTable[eggName]
	if not petList then return end
	
	local chosenPet = petList[math.random(1, #petList)]
	
	-- Show the pet name
	petLabel.Text = "You hatched a: " .. chosenPet
	petLabel.Visible = true
	
	-- Hide after few seconds
	task.delay(3, function()
		petLabel.Visible = false
	end)
end

-- Simulate an egg hatch every 10 seconds (for demo/testing)
task.spawn(function()
	while true do
		task.wait(10)
		
		local eggNames = {}
		for name in pairs(petTable) do
			table.insert(eggNames, name)
		end
		
		local randomEgg = eggNames[math.random(1, #eggNames)]
		hatchEgg(randomEgg)
	end
end)
