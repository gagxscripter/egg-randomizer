-- SERVICES
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer

-- EGG DATA
local petTable = {
    ["Common Egg"] = { "Dog", "Bunny", "Golden Lab" },
    ["Uncommon Egg"] = { "Black Bunny", "Chicken", "Cat", "Deer" },
    ["Rare Egg"] = { "Orange Tabby", "Spotted Deer" },
    ["Epic Egg"] = { "Dalmatian", "Fox", "Snow Deer" },
    ["Legendary Egg"] = { "Robot Dog", "Ice Fox", "Winter Bunny" },
    ["Mythic Egg"] = { "Phoenix", "Unicorn", "Griffin" },
    ["Ancient Egg"] = { "Dragon", "Saber Tooth", "Woolly Mammoth" },
    ["Forest Egg"] = { "Tree Frog", "Mushroom Cat", "Leaf Deer" },
    ["Ocean Egg"] = { "Shark", "Jellyfish", "Sea Turtle" },
    ["Sky Egg"] = { "Eagle", "Cloud Bunny", "Storm Fox" },
    ["Zen Egg"] = { "Zen Cat", "Zen Deer", "Zen Dragon" }
}

-- MUTATION DATA
local mutationTypes = {
    "Shiny", "Inverted", "Frozen", "Windy", "Golden", "Mega", "Tiny", "Tranquil",
    "IronSkin", "Radiant", "Rainbow", "Shocked", "Ascended"
}

-- ESP FUNCTION
local function createESP(part, text)
    local billboard = Instance.new("BillboardGui")
    billboard.Adornee = part
    billboard.Size = UDim2.new(0, 100, 0, 30)
    billboard.StudsOffset = Vector3.new(0, 2, 0)
    billboard.AlwaysOnTop = true
    billboard.Name = "EggESP"

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, 0, 1, 0)
    label.BackgroundTransparency = 1
    label.Text = text
    label.TextColor3 = Color3.new(1, 1, 0)
    label.TextStrokeTransparency = 0.5
    label.TextScaled = true
    label.Font = Enum.Font.SourceSansBold
    label.Parent = billboard

    billboard.Parent = part
end

-- SCAN FOR EGGS
local function addESPToEggs()
    for _, egg in pairs(Workspace:GetDescendants()) do
        if egg:IsA("Model") and petTable[egg.Name] and not egg:FindFirstChild("EggESP") then
            local primaryPart = egg:FindFirstChild("Main") or egg.PrimaryPart or egg:FindFirstChildWhichIsA("BasePart")
            if primaryPart then
                local pets = petTable[egg.Name]
                local previewPet = pets[math.random(1, #pets)]
                createESP(primaryPart, previewPet)
            end
        end
    end
end

-- MUTATION VISUALIZER
local function visualizeMutations()
    local mutationArea = Workspace:FindFirstChild("MutationArea")
    if not mutationArea then return end

    for _, obj in pairs(mutationArea:GetChildren()) do
        if obj:IsA("Model") and not obj:FindFirstChild("MutationTag") then
            local mutation = mutationTypes[math.random(1, #mutationTypes)]
            local tag = Instance.new("BillboardGui")
            tag.Name = "MutationTag"
            tag.Adornee = obj:FindFirstChildWhichIsA("BasePart")
            tag.Size = UDim2.new(0, 120, 0, 30)
            tag.StudsOffset = Vector3.new(0, 3, 0)
            tag.AlwaysOnTop = true

            local label = Instance.new("TextLabel")
            label.Size = UDim2.new(1, 0, 1, 0)
            label.BackgroundTransparency = 1
            label.Text = mutation .. " Mutation"
            label.TextColor3 = Color3.fromRGB(0, 255, 255)
            label.TextStrokeTransparency = 0.5
            label.TextScaled = true
            label.Font = Enum.Font.GothamBold
            label.Parent = tag

            tag.Parent = obj
        end
    end
end

-- LOOP TO UPDATE ESP + MUTATION VISUALS
RunService.RenderStepped:Connect(function()
    addESPToEggs()
    visualizeMutations()
end)
